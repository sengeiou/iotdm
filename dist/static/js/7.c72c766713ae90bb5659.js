webpackJsonp([7],{"93Ve":function(v,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var _=e("ooHx"),n={name:"productDocument",components:{product:e.n(_).a}},a={render:function(){var v=this.$createElement,t=this._self._c||v;return t("div",{staticClass:"doc-box"},[t("product",{staticClass:"markdown-body"})],1)},staticRenderFns:[]};var r=e("C7Lr")(n,a,!1,function(v){e("m5xM")},"data-v-4974ca4a",null);t.default=r.exports},"9zlV":function(v,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var _={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var v=this,t=v.$createElement,e=v._self._c||t;return e("section",[e("html",[e("head"),e("body",[e("h4",[v._v("产品文档")]),v._v(" "),e("p",[v._v("物联网设备接入平台（IoTDm）是百讯智汇科技的物联网平台，提供海量设备连接上云、设备和平台双向消息通信、远程控制、场景规则等能力，并可将设备数据灵活流转到其他服务")]),v._v(" "),e("p",[v._v("业务流程")]),v._v(" "),e("p",[v._v("步骤 1：创建产品。创建一个 MQTT 协议的产品。")]),v._v(" "),e("p",[v._v("步骤 2：开发产品模型。定义设备上报到平台的温湿度值（tem,hum）和继电器开关的命令（switch）。")]),v._v(" "),e("p",[v._v("步骤 3：注册设备。创建一个设备，设备归属与上述产品，体验数据上报业务。")]),v._v(" "),e("p",[v._v("步骤 4：数据上报。在设备模拟区域执行数据上报操作。")]),v._v(" "),e("p",[v._v("步骤 5：命令下发。在应用模拟器区域执行命令下发操作。")]),v._v(" "),e("p",[v._v("功能简介")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("功能")]),v._v(" "),e("th",[v._v("简介")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("产品")]),v._v(" "),e("td",[v._v("某一类具有相同能力或特征的设备的集合称为一款产品。您可以基于控制台快速进行产品模型和插件的开发，同时提供在线调试等多种能力。")])]),v._v(" "),e("tr",[e("td",[v._v("产品模型")]),v._v(" "),e("td",[v._v("又称 Model，用于定义一款接入设备所具备的属性（如颜色、大小、采集的数据、可识别的指令或者设备上报的事件等信息）。")])]),v._v(" "),e("tr",[e("td",[v._v("设备")]),v._v(" "),e("td",[v._v("归属于某个产品下的设备实体，每个设备具有一个唯一的标识码。设备可以是直连物联网平台的设备，也可以是代理子设备连接物联网平台的网关。")])]),v._v(" "),e("tr",[e("td",[v._v("设备鉴权")]),v._v(" "),e("td",[v._v("设备接入物联网平台时，需要对接入平台的设备进行鉴权认证。目前平台支持设备使用密钥方式进行鉴权认证。待平台验证通过，设备成功连接到物联网平台后，就可以进行数据通信。")])]),v._v(" "),e("tr",[e("td",[v._v("网关与子设备")]),v._v(" "),e("td",[v._v("物联网平台支持设备直连，也支持设备挂载在网关上，作为网关的子设备，由网关直连，通过网关进行数据转发。")])]),v._v(" "),e("tr",[e("td",[v._v("规则引擎")]),v._v(" "),e("td",[v._v("用户可以在物联网平台上对接入平台的设备设定相应的规则，在条件满足所设定的规则后，平台会触发相应的动作来满足用户需求。包含设备联动和数据转发两种类型，目前支持数据转发。")])]),v._v(" "),e("tr",[e("td",[v._v("数据上报")]),v._v(" "),e("td",[v._v("当设备完成和物联网平台对接后，一旦设备上电，设备基于在设备定义上的业务逻辑进行数据采集和上报，可以是基于周期或者事件触发")])]),v._v(" "),e("tr",[e("td",[v._v("命令下发")]),v._v(" "),e("td",[v._v("为能有效地对设备进行管理，设备的产品模型中定义了物联网平台可向设备下发的命令，应用服务器可以调用物联网平台开放的 API 接口向设备下发命令，以实现对设备的远程控制。")])])])]),v._v(" "),e("h4",[v._v("设备接入")]),v._v(" "),e("p",[v._v("MQTT 设备密钥接入流程")]),v._v(" "),e("p",[v._v("物联网平台向设备分配全局唯一的设备 ID （deviceId）和密钥（secret），设备标识码（deviceCode）。\n说明：\n密钥可以在注册设备时自定义，如果没有定义，平台将自动分配密钥。")]),v._v(" "),e("h4",[v._v("MQTT 对应表")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("平台字段")]),v._v(" "),e("th",[v._v("mqtt 元素")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("deviceId")]),v._v(" "),e("td",[v._v("clientId")])]),v._v(" "),e("tr",[e("td",[v._v("secret")]),v._v(" "),e("td",[v._v("password")])]),v._v(" "),e("tr",[e("td",[v._v("deviceCode")]),v._v(" "),e("td",[v._v("username")])])])]),v._v(" "),e("h4",[v._v("插件开发")]),v._v(" "),e("p",[v._v("●  一款产品的设备上报数据时，如果“数据格式”为“二进制码流”，则该产品需要进行编解码插件开发；如果“数据格式”为“JSON”，则该产品下不需要进行编解码插件开发。"),e("br"),v._v("\njs示例：")]),v._v(" "),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-var"}},[v._v('var uint8Array = new Uint8Array(payload.length);\nfor (var i = 0; i < payload.length; i++) {\nuint8Array[i] = payload[i] & 0xff;\n}\nvar dataView = new DataView(uint8Array.buffer, 0);\nvar tem = dataView.getInt8(0);\njsonObj = {\n"tem": tem\n};\nreturn JSON.stringify(jsonObj);\n')])]),v._v(" "),e("p",[v._v("在令下发流程中，有两处需要用到编解码插件，将应用服务器下发的 JSON 格式数据编码成二进制码流，下发给设备。"),e("br"),v._v("\njson格式：")]),v._v(" "),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[v._v('toDeviceType": "COMMAND", // 枚举类 分别是 COMMAND，CONFIG，OTA\n"commandLabel": "", //命令名称\n"modelId": "" //模型id  允许为空\n"params": {\n"key1": "value1",\n"key2": 10\n}\n}\n')])]),v._v(" "),e("h4",[v._v("js示例")]),v._v(" "),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-var"}},[v._v("//获取消息类型\nvar msgType = jsonObj.msg_type;\nvar payload = [];\n//将JSON格式数据转换为二进制数据\nif (msgType == MSG_TYPE_COMMANDS) // 命令下发\n{\npayload = payload.concat(buffer_uint8(1)); // 标识命令下发\nif (jsonObj.command_name == 'SET_ALARM') {\npayload = payload.concat(buffer_uint8(0)); // 标识命令名称\n}\nvar paras_value = jsonObj.paras.value;\npayload = payload.concat(buffer_int16(paras_value)); // 设置命令属性值\n}\n//返回编码后的二进制数据\nreturn payload;\n")])]),v._v(" "),e("h2",[v._v("数据转发")]),v._v(" "),e("p",[v._v("步骤 1：创建资源，并激活资源。")]),v._v(" "),e("p",[v._v("步骤 2：创建规则，并激活规则。")]),v._v(" "),e("h4",[v._v("消息发布")]),v._v(" "),e("p",[v._v("发送到  Server，转发到消息队列 Kafka 或 RabbitMQ，重新发布到新的主题甚至是另一个 Broker 集群中，每个规则可以配置多个响应动作。")]),v._v(" "),e("h4",[v._v("事件触发")]),v._v(" "),e("p",[v._v("配置触发条件，目前包括产品、设备、设备属性与设备消息")])])])])}]},n=e("C7Lr")(null,_,!1,null,null,null);t.default=n.exports},m5xM:function(v,t){},ooHx:function(v,t,e){v.exports=e("9zlV")}});
//# sourceMappingURL=7.c72c766713ae90bb5659.js.map